{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 5, "column": 0}, "map": {"version":3,"sources":["file:///Volumes/DISK%20%28E%29/Business/placearena/placearena/src/components/PriceRangeFilter.tsx"],"sourcesContent":["\"use client\";\r\n\r\nimport Link from \"next/link\";\r\nimport { useState } from \"react\";\r\n\r\ninterface PriceRangeFilterProps {\r\n  onPriceRangeChange: (min: number, max: number) => void;\r\n  minPrice?: number;\r\n  maxPrice?: number;\r\n}\r\n\r\nexport default function PriceRangeFilter({\r\n  onPriceRangeChange,\r\n}: // minPrice = 0,\r\n// maxPrice = 100000,\r\nPriceRangeFilterProps) {\r\n  const [minValue, setMinValue] = useState<string>(\"\");\r\n  const [maxValue, setMaxValue] = useState<string>(\"\");\r\n\r\n  const handleApply = () => {\r\n    const min = minValue ? parseInt(minValue) || 0 : 0;\r\n    const max = maxValue ? parseInt(maxValue) || 100000 : 100000;\r\n    onPriceRangeChange(min, max);\r\n  };\r\n\r\n  const handleReset = () => {\r\n    setMinValue(\"\");\r\n    setMaxValue(\"\");\r\n    onPriceRangeChange(0, 100000);\r\n  };\r\n\r\n  return (\r\n    <div className=\"space-y-3\">\r\n      <div className=\"grid grid-cols-2 gap-3\">\r\n        <div>\r\n          <label className=\"flex items-center gap-1 text-xs md:text-sm font-medium text-gray-700 dark:text-gray-300 mb-1.5 md:mb-2\">\r\n            Min Price\r\n          </label>\r\n          <input\r\n            type=\"number\"\r\n            value={minValue}\r\n            onChange={(e) => setMinValue(e.target.value)}\r\n            placeholder=\"0\"\r\n            className=\"w-full px-3 py-2 md:py-[14px] text-sm bg-gray-50 dark:bg-gray-700 border border-gray-200 dark:border-gray-600 rounded-lg focus:outline-none focus:ring-2 focus:ring-purple-500 text-gray-900 dark:text-white\"\r\n          />\r\n        </div>\r\n        <div>\r\n          <label className=\"flex items-center gap-1 text-xs md:text-sm font-medium text-gray-700 dark:text-gray-300 mb-1.5 md:mb-2\">\r\n            Max Price\r\n          </label>\r\n          <input\r\n            type=\"number\"\r\n            value={maxValue}\r\n            onChange={(e) => setMaxValue(e.target.value)}\r\n            placeholder=\"No limit\"\r\n            className=\"w-full px-3 py-2 md:py-[14px] text-sm bg-gray-50 dark:bg-gray-700 border border-gray-200 dark:border-gray-600 rounded-lg focus:outline-none focus:ring-2 focus:ring-purple-500 text-gray-900 dark:text-white\"\r\n          />\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"flex justify-end gap-2\">\r\n        <button\r\n          onClick={handleReset}\r\n          className=\"px-3 md:px-4 py-1.5 md:py-2 text-xs md:text-sm text-gray-600 dark:text-gray-400 hover:text-purple-600 dark:hover:text-purple-400 transition-colors cursor-pointer whitespace-nowrap\"\r\n        >\r\n          Reset\r\n        </button>\r\n        <Link\r\n          href={\"#propertiesSection\"}\r\n          onClick={handleApply}\r\n          className=\"px-3 md:px-4 py-1.5 md:py-2 text-xs md:text-sm bg-purple-600 text-white rounded-lg hover:bg-purple-700 transition-colors cursor-pointer whitespace-nowrap\"\r\n        >\r\n          Apply\r\n        </Link>\r\n      </div>\r\n    </div>\r\n  );\r\n\r\n}\r\n\r\n\r\n"],"names":[],"mappings":";;;;AAEA;AACA;AAHA;;;;AAWe,SAAS,iBAAiB,EACvC,kBAAkB,EAGC;IACnB,MAAM,CAAC,UAAU,YAAY,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAU;IACjD,MAAM,CAAC,UAAU,YAAY,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAU;IAEjD,MAAM,cAAc;QAClB,MAAM,MAAM,WAAW,SAAS,aAAa,IAAI;QACjD,MAAM,MAAM,WAAW,SAAS,aAAa,SAAS;QACtD,mBAAmB,KAAK;IAC1B;IAEA,MAAM,cAAc;QAClB,YAAY;QACZ,YAAY;QACZ,mBAAmB,GAAG;IACxB;IAEA,qBACE,8OAAC;QAAI,WAAU;;0BACb,8OAAC;gBAAI,WAAU;;kCACb,8OAAC;;0CACC,8OAAC;gCAAM,WAAU;0CAAyG;;;;;;0CAG1H,8OAAC;gCACC,MAAK;gCACL,OAAO;gCACP,UAAU,CAAC,IAAM,YAAY,EAAE,MAAM,CAAC,KAAK;gCAC3C,aAAY;gCACZ,WAAU;;;;;;;;;;;;kCAGd,8OAAC;;0CACC,8OAAC;gCAAM,WAAU;0CAAyG;;;;;;0CAG1H,8OAAC;gCACC,MAAK;gCACL,OAAO;gCACP,UAAU,CAAC,IAAM,YAAY,EAAE,MAAM,CAAC,KAAK;gCAC3C,aAAY;gCACZ,WAAU;;;;;;;;;;;;;;;;;;0BAKhB,8OAAC;gBAAI,WAAU;;kCACb,8OAAC;wBACC,SAAS;wBACT,WAAU;kCACX;;;;;;kCAGD,8OAAC,4JAAA,CAAA,UAAI;wBACH,MAAM;wBACN,SAAS;wBACT,WAAU;kCACX;;;;;;;;;;;;;;;;;;AAOT","debugId":null}},
    {"offset": {"line": 133, "column": 0}, "map": {"version":3,"sources":["file:///Volumes/DISK%20%28E%29/Business/placearena/placearena/src/components/SearchFilters.tsx"],"sourcesContent":["\"use client\";\r\n\r\nimport { useState } from \"react\";\r\nimport PriceRangeFilter from \"./PriceRangeFilter\";\r\nimport { Home, LocationEditIcon } from \"lucide-react\";\r\n\r\ninterface SearchFiltersProps {\r\n  onLocationChange: (location: string) => void;\r\n  onTypeChange: (type: string) => void;\r\n  onPriceRangeChange?: (min: number, max: number) => void;\r\n}\r\n\r\nconst khulnaAreas = [\r\n  \"All Areas\",\r\n  \"Nirala\",\r\n  \"Sonadanga\",\r\n  \"Khan Jahan Ali Road\",\r\n  \"Gollamari\",\r\n  \"Doulatpur\",\r\n  \"Khalishpur\",\r\n  \"Boyra\",\r\n  \"Phultala\",\r\n  \"Rupsha\",\r\n  \"Digholia\",\r\n];\r\n\r\nconst propertyTypes = [\r\n  \"All Types\",\r\n  \"Family\",\r\n  \"Bachelor\",\r\n  \"Office\",\r\n  \"Shop\",\r\n  \"Studio\",\r\n  \"Apartment\",\r\n];\r\n\r\nexport default function SearchFilters({\r\n  onLocationChange,\r\n  onTypeChange,\r\n  onPriceRangeChange,\r\n}: SearchFiltersProps) {\r\n  const [selectedLocation, setSelectedLocation] = useState(\"All Areas\");\r\n  const [selectedType, setSelectedType] = useState(\"All Types\");\r\n  const [locationDropdownOpen, setLocationDropdownOpen] = useState(false);\r\n  const [typeDropdownOpen, setTypeDropdownOpen] = useState(false);\r\n\r\n  const handleLocationSelect = (location: string) => {\r\n    setSelectedLocation(location);\r\n    setLocationDropdownOpen(false);\r\n    onLocationChange(location);\r\n  };\r\n\r\n  const handleTypeSelect = (type: string) => {\r\n    setSelectedType(type);\r\n    setTypeDropdownOpen(false);\r\n    onTypeChange(type);\r\n  };\r\n\r\n  const handlePriceRangeChange = (min: number, max: number) => {\r\n    if (onPriceRangeChange) {\r\n      onPriceRangeChange(min, max);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {/* Desktop Filters */}\r\n      <div className=\"hidden md:block bg-white dark:bg-gray-900 shadow-lg rounded-2xl p-6 mx-6 -mt-8 relative z-10\">\r\n        <div className=\"grid grid-cols-2 md:grid-cols-4 gap-4\">\r\n          {/* Location Dropdown */}\r\n          <div className=\"relative\">\r\n            <label className=\"flex items-center text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\">\r\n              <LocationEditIcon className=\"w-4 h-4 inline-flex items-center justify-center mr-2\" />\r\n              Location <span className=\"hidden md:inline-block\">in Khulna</span>\r\n            </label>\r\n            <button\r\n              onClick={() => setLocationDropdownOpen(!locationDropdownOpen)}\r\n              className=\"w-full px-4 py-3 text-left bg-gray-50 dark:bg-gray-800 border border-gray-200 dark:border-gray-700 rounded-lg hover:bg-gray-100 dark:hover:bg-gray-700 transition-colors cursor-pointer\"\r\n            >\r\n              <div className=\"flex items-center justify-between\">\r\n                <span className=\"text-gray-900 dark:text-white\">\r\n                  {selectedLocation}\r\n                </span>\r\n                <i\r\n                  className={`ri-arrow-down-s-line transition-transform ${\r\n                    locationDropdownOpen ? \"rotate-180\" : \"\"\r\n                  }`}\r\n                ></i>\r\n              </div>\r\n            </button>\r\n\r\n            {locationDropdownOpen && (\r\n              <div className=\"absolute top-full left-0 right-0 mt-1 bg-white dark:bg-gray-800 border border-gray-200 dark:border-gray-700 rounded-lg shadow-lg z-20 max-h-60 overflow-y-auto\">\r\n                {khulnaAreas.map((area) => (\r\n                  <button\r\n                    key={area}\r\n                    onClick={() => handleLocationSelect(area)}\r\n                    className=\"w-full px-4 py-3 text-left hover:bg-gray-50 dark:hover:bg-gray-700 transition-colors cursor-pointer text-gray-900 dark:text-white\"\r\n                  >\r\n                    {area}\r\n                  </button>\r\n                ))}\r\n              </div>\r\n            )}\r\n          </div>\r\n\r\n          {/* Property Type Dropdown */}\r\n          <div className=\"relative\">\r\n            <label className=\"flex items-center text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\">\r\n              <Home className=\"w-4 h-4 inline-flex items-center justify-center mr-2\" />\r\n              Property Type\r\n            </label>\r\n            <button\r\n              onClick={() => setTypeDropdownOpen(!typeDropdownOpen)}\r\n              className=\"w-full px-4 py-3 text-left bg-gray-50 dark:bg-gray-800 border border-gray-200 dark:border-gray-700 rounded-lg hover:bg-gray-100 dark:hover:bg-gray-700 transition-colors cursor-pointer\"\r\n            >\r\n              <div className=\"flex items-center justify-between\">\r\n                <span className=\"text-gray-900 dark:text-white\">\r\n                  {selectedType}\r\n                </span>\r\n                <i\r\n                  className={`ri-arrow-down-s-line transition-transform ${\r\n                    typeDropdownOpen ? \"rotate-180\" : \"\"\r\n                  }`}\r\n                ></i>\r\n              </div>\r\n            </button>\r\n\r\n            {typeDropdownOpen && (\r\n              <div className=\"absolute top-full left-0 right-0 mt-1 bg-white dark:bg-gray-800 border border-gray-200 dark:border-gray-700 rounded-lg shadow-lg z-20 max-h-60 overflow-y-auto\">\r\n                {propertyTypes.map((type) => (\r\n                  <button\r\n                    key={type}\r\n                    onClick={() => handleTypeSelect(type)}\r\n                    className=\"w-full px-4 py-3 text-left hover:bg-gray-50 dark:hover:bg-gray-700 transition-colors cursor-pointer text-gray-900 dark:text-white\"\r\n                  >\r\n                    {type}\r\n                  </button>\r\n                ))}\r\n              </div>\r\n            )}\r\n          </div>\r\n\r\n          {/* Price Range Filter */}\r\n          <div className=\"relative col-span-2\">\r\n            <PriceRangeFilter onPriceRangeChange={handlePriceRangeChange} />\r\n          </div>\r\n        </div>\r\n\r\n        {/* Desktop Filter Tags */}\r\n        <div className=\"mt-6 pt-4 border-t border-gray-200 dark:border-gray-700\">\r\n          <div className=\"flex flex-wrap gap-2\">\r\n            {propertyTypes.slice(1).map((type) => (\r\n              <button\r\n                key={type}\r\n                onClick={() => handleTypeSelect(type)}\r\n                className={`px-4 py-2 rounded-full text-sm font-medium transition-colors cursor-pointer whitespace-nowrap ${\r\n                  selectedType === type\r\n                    ? \"bg-purple-600 text-white\"\r\n                    : \"bg-gray-100 dark:bg-gray-800 text-gray-700 dark:text-gray-300 hover:bg-purple-100 dark:hover:bg-purple-900/30\"\r\n                }`}\r\n              >\r\n                {type}\r\n              </button>\r\n            ))}\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Mobile Filters */}\r\n      <div className=\"md:hidden bg-white dark:bg-gray-900 shadow-lg rounded-xl p-3 mx-3 -mt-6 relative z-10\">\r\n        <div className=\"space-y-3\">\r\n          {/* Location Dropdown - Mobile */}\r\n          <div className=\"relative\">\r\n            <label className=\"flex items-center text-xs font-medium text-gray-700 dark:text-gray-300 mb-1.5\">\r\n              <LocationEditIcon className=\"w-3 h-3 mr-1\" />\r\n              Location\r\n            </label>\r\n            <button\r\n              onClick={() => setLocationDropdownOpen(!locationDropdownOpen)}\r\n              className=\"w-full px-3 py-2 text-left bg-gray-50 dark:bg-gray-800 border border-gray-200 dark:border-gray-700 rounded-lg hover:bg-gray-100 dark:hover:bg-gray-700 transition-colors cursor-pointer\"\r\n            >\r\n              <div className=\"flex items-center justify-between\">\r\n                <span className=\"text-sm text-gray-900 dark:text-white truncate\">\r\n                  {selectedLocation}\r\n                </span>\r\n                <i\r\n                  className={`ri-arrow-down-s-line text-sm transition-transform ${\r\n                    locationDropdownOpen ? \"rotate-180\" : \"\"\r\n                  }`}\r\n                ></i>\r\n              </div>\r\n            </button>\r\n\r\n            {locationDropdownOpen && (\r\n              <div className=\"absolute top-full left-0 right-0 mt-1 bg-white dark:bg-gray-800 border border-gray-200 dark:border-gray-700 rounded-lg shadow-lg z-20 max-h-44 overflow-y-auto\">\r\n                {khulnaAreas.map((area) => (\r\n                  <button\r\n                    key={area}\r\n                    onClick={() => handleLocationSelect(area)}\r\n                    className=\"w-full px-3 py-2 text-left hover:bg-gray-50 dark:hover:bg-gray-700 transition-colors cursor-pointer text-sm text-gray-900 dark:text-white\"\r\n                  >\r\n                    {area}\r\n                  </button>\r\n                ))}\r\n              </div>\r\n            )}\r\n          </div>\r\n\r\n          {/* Property Type Dropdown - Mobile */}\r\n          <div className=\"relative\">\r\n            <label className=\"flex items-center text-xs font-medium text-gray-700 dark:text-gray-300 mb-1.5\">\r\n              <Home className=\"w-3 h-3 mr-1\" />\r\n              Property Type\r\n            </label>\r\n            <button\r\n              onClick={() => setTypeDropdownOpen(!typeDropdownOpen)}\r\n              className=\"w-full px-3 py-2 text-left bg-gray-50 dark:bg-gray-800 border border-gray-200 dark:border-gray-700 rounded-lg hover:bg-gray-100 dark:hover:bg-gray-700 transition-colors cursor-pointer\"\r\n            >\r\n              <div className=\"flex items-center justify-between\">\r\n                <span className=\"text-sm text-gray-900 dark:text-white truncate\">\r\n                  {selectedType}\r\n                </span>\r\n                <i\r\n                  className={`ri-arrow-down-s-line text-sm transition-transform ${\r\n                    typeDropdownOpen ? \"rotate-180\" : \"\"\r\n                  }`}\r\n                ></i>\r\n              </div>\r\n            </button>\r\n\r\n            {typeDropdownOpen && (\r\n              <div className=\"absolute top-full left-0 right-0 mt-1 bg-white dark:bg-gray-800 border border-gray-200 dark:border-gray-700 rounded-lg shadow-lg z-20 max-h-44 overflow-y-auto\">\r\n                {propertyTypes.map((type) => (\r\n                  <button\r\n                    key={type}\r\n                    onClick={() => handleTypeSelect(type)}\r\n                    className=\"w-full px-3 py-2 text-left hover:bg-gray-50 dark:hover:bg-gray-700 transition-colors cursor-pointer text-sm text-gray-900 dark:text-white\"\r\n                  >\r\n                    {type}\r\n                  </button>\r\n                ))}\r\n              </div>\r\n            )}\r\n          </div>\r\n\r\n          {/* Price Range Filter - Mobile */}\r\n          <div className=\"relative\">\r\n            <PriceRangeFilter onPriceRangeChange={handlePriceRangeChange} />\r\n          </div>\r\n        </div>\r\n\r\n        {/* Mobile Filter Tags */}\r\n        <div className=\"mt-3 pt-3 border-t border-gray-200 dark:border-gray-700\">\r\n          <div className=\"flex flex-wrap gap-1.5\">\r\n            {propertyTypes.slice(1).map((type) => (\r\n              <button\r\n                key={type}\r\n                onClick={() => handleTypeSelect(type)}\r\n                className={`px-2.5 py-1 rounded-full text-xs font-medium transition-colors cursor-pointer whitespace-nowrap ${\r\n                  selectedType === type\r\n                    ? \"bg-purple-600 text-white\"\r\n                    : \"bg-gray-100 dark:bg-gray-800 text-gray-700 dark:text-gray-300 hover:bg-purple-100 dark:hover:bg-purple-900/30\"\r\n                }`}\r\n              >\r\n                {type}\r\n              </button>\r\n            ))}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 615, "column": 0}, "map": {"version":3,"sources":["file:///Volumes/DISK%20%28E%29/Business/placearena/placearena/src/components/PropertyCard.tsx"],"sourcesContent":["import { useState, useEffect } from \"react\";\r\nimport Link from \"next/link\";\r\nimport Image from \"next/image\";\r\n// import { Bookmark, MapPin, Door, Drop, Star } from \"@lucid/react\";\r\nimport { IProperties } from \"@/app/saved/page\";\r\nimport { Bookmark, DoorClosed, Droplet, MapPin, Star } from \"lucide-react\";\r\n\r\ninterface Property {\r\n  _id: string;\r\n  title: string;\r\n  location: string;\r\n  type: string;\r\n  rent: number;\r\n  rooms: number;\r\n  bathrooms: number;\r\n  area: string;\r\n  image: string;\r\n  images: string[];\r\n  features: string[];\r\n}\r\n\r\ninterface PropertyCardProps {\r\n  property: IProperties | Property;\r\n  isMobile?: boolean;\r\n}\r\n\r\nexport default function PropertyCard({\r\n  property,\r\n  isMobile = false,\r\n}: PropertyCardProps) {\r\n  const [isSaved, setIsSaved] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const savedProperties = localStorage.getItem(\"savedProperties\");\r\n    if (savedProperties) {\r\n      const savedIds = JSON.parse(savedProperties);\r\n      setIsSaved(savedIds.includes(property._id));\r\n    }\r\n  }, [property._id]);\r\n\r\n  const toggleSave = (e: React.MouseEvent) => {\r\n    e.preventDefault();\r\n    e.stopPropagation();\r\n    const savedProperties = localStorage.getItem(\"savedProperties\");\r\n    let savedIds = savedProperties ? JSON.parse(savedProperties) : [];\r\n    savedIds = isSaved\r\n      ? savedIds.filter((id: string) => id !== property._id)\r\n      : [...savedIds, property._id];\r\n    localStorage.setItem(\"savedProperties\", JSON.stringify(savedIds));\r\n    setIsSaved(!isSaved);\r\n  };\r\n\r\n  const getConsistentDate = () => {\r\n    const baseDate = new Date(\"2024-01-01\");\r\n    const daysToAdd = (1 * 7) % 30;\r\n    const targetDate = new Date(\r\n      baseDate.getTime() + daysToAdd * 24 * 60 * 60 * 1000\r\n    );\r\n    return targetDate.toLocaleDateString(\"en-US\", {\r\n      month: \"short\",\r\n      day: \"numeric\",\r\n      timeZone: \"UTC\",\r\n    });\r\n  };\r\n\r\n  const imageSrc =\r\n    Array.isArray(property.images) && property.images.length > 0\r\n      ? property.images[0]\r\n      : \"/fallback-image.jpg\";\r\n\r\n  if (isMobile) {\r\n    return (\r\n      <div className=\"bg-white dark:bg-gray-900 rounded-xl shadow-lg hover:shadow-xl transition-all duration-300 overflow-hidden group\">\r\n        <div className=\"relative h-32 overflow-hidden\">\r\n          {imageSrc && (\r\n            <Image\r\n              fill\r\n              src={imageSrc}\r\n              alt={property.title}\r\n              className=\"w-full h-full object-cover object-top group-hover:scale-105 transition-transform duration-500\"\r\n            />\r\n          )}\r\n          <div className=\"absolute top-2 left-2\">\r\n            <span className=\"px-2 py-1 bg-purple-600 text-white text-xs font-medium rounded-full\">\r\n              {property.type}\r\n            </span>\r\n          </div>\r\n          <div className=\"absolute top-2 right-2 flex gap-1\">\r\n            <button\r\n              onClick={toggleSave}\r\n              className={`w-6 h-6 rounded-full flex items-center justify-center transition-all duration-200 cursor-pointer ${\r\n                isSaved\r\n                  ? \"bg-blue-600 text-white\"\r\n                  : \"bg-white/80 text-gray-600 hover:bg-blue-100 hover:text-blue-600\"\r\n              }`}\r\n            >\r\n              <Bookmark\r\n                className=\"w-3 h-3\"\r\n                fill={isSaved ? \"currentColor\" : \"none\"}\r\n                stroke=\"currentColor\"\r\n              />\r\n            </button>\r\n            <div className=\"w-6 h-6 bg-amber-500 rounded-full flex items-center justify-center transition-all duration-200 hover:bg-amber-400\">\r\n              <Star className=\"w-3 h-3 text-white\" fill=\"currentColor\" />\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"p-3\">\r\n          <h3 className=\"text-sm font-bold text-gray-900 dark:text-white mb-1 line-clamp-1\">\r\n            {property.title}\r\n          </h3>\r\n          <div className=\"flex items-center text-gray-600 dark:text-gray-400 mb-2\">\r\n            <MapPin className=\"w-3 h-3 mr-1\" />\r\n            <span className=\"text-xs truncate\">{property.location}</span>\r\n          </div>\r\n          <div className=\"flex items-center justify-between text-xs text-gray-600 dark:text-gray-400 mb-2\">\r\n            <span>{property.rooms}R</span>\r\n            <span>{property.bathrooms}B</span>\r\n            <span>{getConsistentDate()}</span>\r\n          </div>\r\n          <div className=\"flex items-center justify-between\">\r\n            <span className=\"text-lg font-bold text-purple-600 dark:text-purple-400\">\r\n              ৳{(Number(property.rent) / 1000).toFixed(0)}k\r\n            </span>\r\n            <Link href={`/property/${property._id}`}>\r\n              <button className=\"px-2 py-1 bg-gradient-to-r from-purple-600 to-blue-600 text-white text-xs rounded-lg hover:from-purple-700 hover:to-blue-700 transition-all duration-300 cursor-pointer whitespace-nowrap\">\r\n                View\r\n              </button>\r\n            </Link>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"bg-white dark:bg-gray-900 rounded-2xl shadow-lg hover:shadow-xl transition-all duration-300 overflow-hidden group\">\r\n      <div className=\"relative h-48 overflow-hidden\">\r\n        {imageSrc && (\r\n          <Image\r\n            fill\r\n            src={imageSrc}\r\n            alt={property.title}\r\n            className=\"w-full h-full object-cover object-top group-hover:scale-105 transition-transform duration-500\"\r\n          />\r\n        )}\r\n        <div className=\"absolute top-4 left-4\">\r\n          <span className=\"px-3 py-1 bg-purple-600 text-white text-sm font-medium rounded-full\">\r\n            {property.type}\r\n          </span>\r\n        </div>\r\n        <div className=\"absolute top-4 right-4 flex gap-2\">\r\n          <button\r\n            onClick={toggleSave}\r\n            className={`w-8 h-8 rounded-full flex items-center justify-center transition-all duration-200 cursor-pointer ${\r\n              isSaved\r\n                ? \"bg-blue-600 text-white\"\r\n                : \"bg-white/80 text-gray-600 hover:bg-blue-100 hover:text-blue-600\"\r\n            }`}\r\n          >\r\n            <Bookmark\r\n              className=\"w-4 h-4\"\r\n              fill={isSaved ? \"currentColor\" : \"none\"}\r\n              stroke=\"currentColor\"\r\n            />\r\n          </button>\r\n          <div className=\"w-8 h-8 bg-amber-500 rounded-full flex items-center justify-center transition-all duration-200 hover:bg-amber-400\">\r\n            <Star className=\"w-4 h-4 text-white\" fill=\"currentColor\" />\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"p-6\">\r\n        <h3 className=\"text-xl font-bold text-gray-900 dark:text-white mb-2\">\r\n          {property.title}\r\n        </h3>\r\n        <div className=\"flex items-center text-gray-600 dark:text-gray-400 mb-3\">\r\n          <MapPin className=\"w-4 h-4 mr-1\" />\r\n          <span className=\"text-sm\">{property.location}</span>\r\n        </div>\r\n        <div className=\"flex items-center justify-between mb-4\">\r\n          <div className=\"flex items-center space-x-4 text-sm text-gray-600 dark:text-gray-400\">\r\n            <div className=\"flex items-center\">\r\n              <DoorClosed className=\"w-4 h-4 mr-1\" />\r\n              <span>{property.rooms} Rooms</span>\r\n            </div>\r\n            <div className=\"flex items-center\">\r\n              <Droplet className=\"w-4 h-4 mr-1\" />\r\n              <span>{property.bathrooms} Baths</span>\r\n            </div>\r\n          </div>\r\n          <div className=\"text-sm text-gray-600 dark:text-gray-400\">\r\n            To-let: {getConsistentDate()}\r\n          </div>\r\n        </div>\r\n        <div className=\"flex flex-wrap gap-2 mb-4\">\r\n          {property.features.slice(0, 2).map((feature, index) => (\r\n            <span\r\n              key={index}\r\n              className=\"px-2 py-1 bg-blue-50 dark:bg-blue-900/20 text-blue-600 dark:text-blue-400 text-xs rounded-lg\"\r\n            >\r\n              {feature}\r\n            </span>\r\n          ))}\r\n        </div>\r\n        <div className=\"flex items-center justify-between\">\r\n          <div>\r\n            <span className=\"text-2xl font-bold text-purple-600 dark:text-purple-400\">\r\n              ৳{Intl.NumberFormat('en-US').format(property.rent)}\r\n            </span>\r\n            <span className=\"text-gray-500 dark:text-gray-400 ml-1\">\r\n              /month\r\n            </span>\r\n          </div>\r\n          <Link href={`/property/${property._id}`}>\r\n            <button className=\"px-4 py-2 bg-gradient-to-r from-purple-600 to-blue-600 text-white font-medium rounded-lg hover:from-purple-700 hover:to-blue-700 transition-all duration-300 cursor-pointer whitespace-nowrap\">\r\n              View Details\r\n            </button>\r\n          </Link>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1142, "column": 0}, "map": {"version":3,"sources":["file:///Volumes/DISK%20%28E%29/Business/placearena/placearena/src/components/PropertyGrid.tsx"],"sourcesContent":["\"use client\";\r\n\r\nimport PropertyCard from \"./PropertyCard\";\r\n\r\ninterface Property {\r\n  _id: string;\r\n  title: string;\r\n  location: string;\r\n  type: string;\r\n  rent: number;\r\n  rooms: number;\r\n  bathrooms: number;\r\n  area: string;\r\n  image: string;\r\n  images: string[]; // Optional array of images\r\n  features: string[];\r\n}\r\n\r\ninterface PropertyGridProps {\r\n  properties: Property[];\r\n  filteredLocation: string;\r\n  filteredType: string;\r\n  priceRange?: { min: number; max: number };\r\n}\r\n\r\nexport default function PropertyGrid({\r\n  properties,\r\n  filteredLocation,\r\n  filteredType,\r\n  priceRange,\r\n}: PropertyGridProps) {\r\n  // Ensure properties is always an array; support { data: [] } shape\r\n  const safeProperties = Array.isArray(properties)\r\n    ? properties\r\n    : Array.isArray((properties as any)?.data)\r\n    ? ((properties as any).data as Property[])\r\n    : [];\r\n  // Filter properties based on all criteria\r\n  const filteredProperties = safeProperties.filter((property) => {\r\n    const locationMatch =\r\n      filteredLocation === \"All Areas\" ||\r\n      property.location === filteredLocation;\r\n    const typeMatch =\r\n      filteredType === \"All Types\" || property.type === filteredType;\r\n    const priceMatch =\r\n      !priceRange ||\r\n      (property.rent >= priceRange.min && property.rent <= priceRange.max);\r\n\r\n    return locationMatch && typeMatch && priceMatch;\r\n  });\r\n\r\n  return (\r\n    <div>\r\n      {/* Results Count */}\r\n      <div className=\"mb-6\">\r\n        <p className=\"text-sm md:text-base text-gray-600 dark:text-gray-400\">\r\n          Showing {filteredProperties.length}{\" \"}\r\n          {filteredProperties.length === 1 ? \"property\" : \"properties\"}\r\n          {filteredLocation !== \"All Areas\" && ` in ${filteredLocation}`}\r\n          {filteredType !== \"All Types\" && ` • ${filteredType} properties`}\r\n          {priceRange &&\r\n            (priceRange.min > 0 || priceRange.max < 100000) &&\r\n            ` • ৳${Intl.NumberFormat('en-US').format(priceRange.min)} - ৳${Intl.NumberFormat('en-US').format(priceRange.max)}`}\r\n        </p>\r\n      </div>\r\n\r\n      {filteredProperties.length === 0 ? (\r\n        <div className=\"text-center py-16\">\r\n          <div className=\"w-24 h-24 bg-gray-100 dark:bg-gray-800 rounded-full flex items-center justify-center mx-auto mb-6\">\r\n            <i className=\"ri-building-line text-4xl text-gray-400\"></i>\r\n          </div>\r\n          <h3 className=\"text-xl font-semibold text-gray-900 dark:text-white mb-2\">\r\n            No properties found\r\n          </h3>\r\n          <p className=\"text-gray-600 dark:text-gray-400 mb-6\">\r\n            Try adjusting your filters to see more results\r\n          </p>\r\n        </div>\r\n      ) : (\r\n        <>\r\n          {/* Desktop Grid */}\r\n          <div className=\"hidden md:grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\r\n            {filteredProperties.map((property) => (\r\n              <PropertyCard key={property._id} property={property} />\r\n            ))}\r\n          </div>\r\n\r\n          {/* Mobile Grid */}\r\n          <div className=\"md:hidden grid grid-cols-2 gap-3\">\r\n            {filteredProperties.map((property) => (\r\n              <PropertyCard\r\n                key={property._id}\r\n                property={property}\r\n                isMobile={true}\r\n              />\r\n            ))}\r\n          </div>\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n"],"names":[],"mappings":";;;;AAEA;AAFA;;;AAyBe,SAAS,aAAa,EACnC,UAAU,EACV,gBAAgB,EAChB,YAAY,EACZ,UAAU,EACQ;IAClB,mEAAmE;IACnE,MAAM,iBAAiB,MAAM,OAAO,CAAC,cACjC,aACA,MAAM,OAAO,CAAE,YAAoB,QAClC,AAAC,WAAmB,IAAI,GACzB,EAAE;IACN,0CAA0C;IAC1C,MAAM,qBAAqB,eAAe,MAAM,CAAC,CAAC;QAChD,MAAM,gBACJ,qBAAqB,eACrB,SAAS,QAAQ,KAAK;QACxB,MAAM,YACJ,iBAAiB,eAAe,SAAS,IAAI,KAAK;QACpD,MAAM,aACJ,CAAC,cACA,SAAS,IAAI,IAAI,WAAW,GAAG,IAAI,SAAS,IAAI,IAAI,WAAW,GAAG;QAErE,OAAO,iBAAiB,aAAa;IACvC;IAEA,qBACE,8OAAC;;0BAEC,8OAAC;gBAAI,WAAU;0BACb,cAAA,8OAAC;oBAAE,WAAU;;wBAAwD;wBAC1D,mBAAmB,MAAM;wBAAE;wBACnC,mBAAmB,MAAM,KAAK,IAAI,aAAa;wBAC/C,qBAAqB,eAAe,CAAC,IAAI,EAAE,kBAAkB;wBAC7D,iBAAiB,eAAe,CAAC,GAAG,EAAE,aAAa,WAAW,CAAC;wBAC/D,cACC,CAAC,WAAW,GAAG,GAAG,KAAK,WAAW,GAAG,GAAG,MAAM,KAC9C,CAAC,IAAI,EAAE,KAAK,YAAY,CAAC,SAAS,MAAM,CAAC,WAAW,GAAG,EAAE,IAAI,EAAE,KAAK,YAAY,CAAC,SAAS,MAAM,CAAC,WAAW,GAAG,GAAG;;;;;;;;;;;;YAIvH,mBAAmB,MAAM,KAAK,kBAC7B,8OAAC;gBAAI,WAAU;;kCACb,8OAAC;wBAAI,WAAU;kCACb,cAAA,8OAAC;4BAAE,WAAU;;;;;;;;;;;kCAEf,8OAAC;wBAAG,WAAU;kCAA2D;;;;;;kCAGzE,8OAAC;wBAAE,WAAU;kCAAwC;;;;;;;;;;;qCAKvD;;kCAEE,8OAAC;wBAAI,WAAU;kCACZ,mBAAmB,GAAG,CAAC,CAAC,yBACvB,8OAAC,kIAAA,CAAA,UAAY;gCAAoB,UAAU;+BAAxB,SAAS,GAAG;;;;;;;;;;kCAKnC,8OAAC;wBAAI,WAAU;kCACZ,mBAAmB,GAAG,CAAC,CAAC,yBACvB,8OAAC,kIAAA,CAAA,UAAY;gCAEX,UAAU;gCACV,UAAU;+BAFL,SAAS,GAAG;;;;;;;;;;;;;;;;;;AAUjC","debugId":null}},
    {"offset": {"line": 1267, "column": 0}, "map": {"version":3,"sources":["file:///Volumes/DISK%20%28E%29/Business/placearena/placearena/src/components/MobileBottomNav.tsx"],"sourcesContent":["\"use client\";\r\n\r\nimport Link from \"next/link\";\r\nimport { usePathname } from \"next/navigation\";\r\nimport {\r\n  Home,\r\n  HomeIcon,\r\n  Building,\r\n  Building2,\r\n  Heart,\r\n  HeartHandshake,\r\n  PlusCircle,\r\n  User,\r\n  User2,\r\n} from \"lucide-react\";\r\n\r\nexport default function MobileBottomNav() {\r\n  const pathname = usePathname();\r\n\r\n  const navItems = [\r\n    {\r\n      href: \"/\",\r\n      icon: Home,\r\n      activeIcon: HomeIcon, // slightly bolder look\r\n      label: \"Home\",\r\n    },\r\n    {\r\n      href: \"/properties\",\r\n      icon: Building,\r\n      activeIcon: Building2,\r\n      label: \"Properties\",\r\n    },\r\n    {\r\n      href: \"/saved\",\r\n      icon: Heart,\r\n      activeIcon: HeartHandshake,\r\n      label: \"Saved\",\r\n    },\r\n    {\r\n      href: \"/add-property\",\r\n      icon: PlusCircle,\r\n      activeIcon: PlusCircle, // same icon, just color change\r\n      label: \"Add Property\",\r\n    },\r\n    {\r\n      href: \"/profile\",\r\n      icon: User,\r\n      activeIcon: User2,\r\n      label: \"Profile\",\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <nav className=\"md:hidden fixed bottom-0 left-0 right-0 bg-white dark:bg-gray-900 border-t border-gray-200 dark:border-gray-700 z-50\">\r\n      <div className=\"grid grid-cols-5\">\r\n        {navItems.map((item) => {\r\n          const isActive = pathname === item.href;\r\n          const Icon = isActive ? item.activeIcon : item.icon;\r\n\r\n          return (\r\n            <Link\r\n              key={item.href}\r\n              href={item.href}\r\n              className={`flex flex-col items-center justify-center py-2 px-1 transition-colors cursor-pointer min-h-[60px] ${\r\n                isActive\r\n                  ? \"text-purple-600 dark:text-purple-400\"\r\n                  : \"text-gray-500 dark:text-gray-400 hover:text-purple-600 dark:hover:text-purple-400\"\r\n              }`}\r\n            >\r\n              <div className=\"w-5 h-5 flex items-center justify-center mb-1\">\r\n                <Icon className=\"w-5 h-5\" />\r\n              </div>\r\n              <span className=\"text-xs font-medium leading-tight text-center\">\r\n                {item.label}\r\n              </span>\r\n            </Link>\r\n          );\r\n        })}\r\n      </div>\r\n    </nav>\r\n  );\r\n}\r\n"],"names":[],"mappings":";;;;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAJA;;;;;AAgBe,SAAS;IACtB,MAAM,WAAW,CAAA,GAAA,kIAAA,CAAA,cAAW,AAAD;IAE3B,MAAM,WAAW;QACf;YACE,MAAM;YACN,MAAM,mMAAA,CAAA,OAAI;YACV,YAAY,uMAAA,CAAA,WAAQ;YACpB,OAAO;QACT;QACA;YACE,MAAM;YACN,MAAM,0MAAA,CAAA,WAAQ;YACd,YAAY,gNAAA,CAAA,YAAS;YACrB,OAAO;QACT;QACA;YACE,MAAM;YACN,MAAM,oMAAA,CAAA,QAAK;YACX,YAAY,0NAAA,CAAA,iBAAc;YAC1B,OAAO;QACT;QACA;YACE,MAAM;YACN,MAAM,kNAAA,CAAA,aAAU;YAChB,YAAY,kNAAA,CAAA,aAAU;YACtB,OAAO;QACT;QACA;YACE,MAAM;YACN,MAAM,kMAAA,CAAA,OAAI;YACV,YAAY,4MAAA,CAAA,QAAK;YACjB,OAAO;QACT;KACD;IAED,qBACE,8OAAC;QAAI,WAAU;kBACb,cAAA,8OAAC;YAAI,WAAU;sBACZ,SAAS,GAAG,CAAC,CAAC;gBACb,MAAM,WAAW,aAAa,KAAK,IAAI;gBACvC,MAAM,OAAO,WAAW,KAAK,UAAU,GAAG,KAAK,IAAI;gBAEnD,qBACE,8OAAC,4JAAA,CAAA,UAAI;oBAEH,MAAM,KAAK,IAAI;oBACf,WAAW,CAAC,kGAAkG,EAC5G,WACI,yCACA,qFACJ;;sCAEF,8OAAC;4BAAI,WAAU;sCACb,cAAA,8OAAC;gCAAK,WAAU;;;;;;;;;;;sCAElB,8OAAC;4BAAK,WAAU;sCACb,KAAK,KAAK;;;;;;;mBAZR,KAAK,IAAI;;;;;YAgBpB;;;;;;;;;;;AAIR","debugId":null}},
    {"offset": {"line": 1376, "column": 0}, "map": {"version":3,"sources":["file:///Volumes/DISK%20%28E%29/Business/placearena/placearena/src/app/actions.ts"],"sourcesContent":["\"use server\";\r\n\r\nexport async function getUserProfile({\r\n  accessToken,\r\n  refreshToken,\r\n}: {\r\n  accessToken: string;\r\n  refreshToken?: string;\r\n}) {\r\n  try {\r\n    // If we don't have an access token, try refreshing with the refresh token\r\n    if (!accessToken) {\r\n      if (refreshToken) {\r\n        const refreshtokenRes = await fetch(\r\n          `${process.env.BACKEND_URL}/api/v1/auth/refresh`,\r\n          {\r\n            method: \"POST\",\r\n            body: JSON.stringify({ refresh_token: refreshToken }),\r\n            headers: { \"Content-Type\": \"application/json\" },\r\n          }\r\n        );\r\n        const accesTokenResponse = await refreshtokenRes.json();\r\n        if (!!accesTokenResponse.accessToken) {\r\n          return getUserProfile({ accessToken: accesTokenResponse.accessToken });\r\n        }\r\n      }\r\n      return null;\r\n    }\r\n\r\n    // We have an access token, attempt to load profile\r\n    const res = await fetch(`${process.env.BACKEND_URL}/api/v1/auth/profile`, {\r\n      headers: {\r\n        Authorization: `Bearer ${accessToken}`,\r\n      },\r\n      credentials: \"include\",\r\n    });\r\n\r\n    const profileData = await res.json();\r\n\r\n    if (profileData.success) {\r\n      return profileData?.data;\r\n    } else if (refreshToken) {\r\n      // If access token failed, attempt refresh with provided refresh token\r\n      const refreshtokenRes = await fetch(\r\n        `${process.env.BACKEND_URL}/api/v1/auth/refresh`,\r\n        {\r\n          method: \"POST\",\r\n          body: JSON.stringify({ refresh_token: refreshToken }),\r\n          headers: { \"Content-Type\": \"application/json\" },\r\n        }\r\n      );\r\n\r\n      const accesTokenResponse = await refreshtokenRes.json();\r\n\r\n      if (!!accesTokenResponse.accessToken) {\r\n        return getUserProfile({ accessToken: accesTokenResponse.accessToken });\r\n      }\r\n    }\r\n    return null;\r\n  } catch (err) {\r\n    console.error(\"Network error:\", err);\r\n    return null;\r\n  }\r\n}\r\n\r\nexport const getHomePageProperties = async () => {\r\n  const res = await fetch(\r\n    `${process.env.BACKEND_URL}/api/v1/property`,\r\n    { next: { revalidate: 0 }, cache: \"no-store\" }\r\n  );\r\n  const data = await res.json();\r\n\r\n  return data;\r\n};\r\n"],"names":[],"mappings":";;;;;;IAiEa,wBAAA,WAAA,GAAA,CAAA,GAAA,sNAAA,CAAA,wBAAA,EAAA,8CAAA,sNAAA,CAAA,aAAA,EAAA,KAAA,GAAA,sNAAA,CAAA,mBAAA,EAAA","debugId":null}},
    {"offset": {"line": 1387, "column": 0}, "map": {"version":3,"sources":["file:///Volumes/DISK%20%28E%29/Business/placearena/placearena/src/app/properties/page.tsx"],"sourcesContent":["\"use client\";\r\n\r\nimport { useEffect, useState } from \"react\";\r\n\r\nimport SearchFilters from \"../../components/SearchFilters\";\r\nimport PropertyGrid from \"../../components/PropertyGrid\";\r\nimport MobileBottomNav from \"../../components/MobileBottomNav\";\r\nimport Footer from \"../../components/Footer\";\r\nimport { getHomePageProperties } from \"../actions\";\r\n\r\nexport default function PropertiesPage() {\r\n  const [filteredLocation, setFilteredLocation] = useState(\"All Areas\");\r\n  const [filteredType, setFilteredType] = useState(\"All Types\");\r\n  const [priceRange, setPriceRange] = useState({ min: 0, max: 100000 });\r\n  const [properties, setProperties] = useState([]);\r\n  const handlePriceRangeChange = (min: number, max: number) => {\r\n    setPriceRange({ min, max });\r\n  };\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      const data = await getHomePageProperties();\r\n      setProperties(\r\n        Array.isArray(data)\r\n          ? data\r\n          : Array.isArray((data as any)?.data)\r\n          ? ((data as any).data as any[])\r\n          : []\r\n      );\r\n    }\r\n    fetchData();\r\n  }, []);\r\n  return (\r\n    <div className=\"min-h-screen bg-gray-50 dark:bg-gray-950 pb-20 md:pb-0 flex flex-col\">\r\n      {/* Page Header */}\r\n      <div className=\"bg-gradient-to-r from-purple-600 to-blue-600 px-4 py-8\">\r\n        <div className=\"max-w-7xl mx-auto text-center text-white\">\r\n          <h1 className=\"text-2xl md:text-4xl font-bold mb-2 md:mb-4\">\r\n            Browse All Properties\r\n          </h1>\r\n          <p className=\"text-sm md:text-lg text-purple-100\">\r\n            Find your perfect rental home in Khulna\r\n          </p>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"max-w-7xl mx-auto\">\r\n        <SearchFilters\r\n          onLocationChange={setFilteredLocation}\r\n          onTypeChange={setFilteredType}\r\n          onPriceRangeChange={handlePriceRangeChange}\r\n        />\r\n      </div>\r\n\r\n      <section className=\"py-8 md:py-16 flex-1\" id=\"propertiesSection\">\r\n        <div className=\"max-w-7xl mx-auto px-3 md:px-6\">\r\n          <PropertyGrid\r\n            properties={properties}\r\n            filteredLocation={filteredLocation}\r\n            filteredType={filteredType}\r\n            priceRange={priceRange}\r\n          />\r\n        </div>\r\n      </section>\r\n\r\n      <MobileBottomNav />\r\n    </div>\r\n  );\r\n}\r\n"],"names":[],"mappings":";;;;AAEA;AAEA;AACA;AACA;AAEA;AARA;;;;;;;AAUe,SAAS;IACtB,MAAM,CAAC,kBAAkB,oBAAoB,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IACzD,MAAM,CAAC,cAAc,gBAAgB,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IACjD,MAAM,CAAC,YAAY,cAAc,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;QAAE,KAAK;QAAG,KAAK;IAAO;IACnE,MAAM,CAAC,YAAY,cAAc,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE,EAAE;IAC/C,MAAM,yBAAyB,CAAC,KAAa;QAC3C,cAAc;YAAE;YAAK;QAAI;IAC3B;IACA,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACR,eAAe;YACb,MAAM,OAAO,MAAM,CAAA,GAAA,kJAAA,CAAA,wBAAqB,AAAD;YACvC,cACE,MAAM,OAAO,CAAC,QACV,OACA,MAAM,OAAO,CAAE,MAAc,QAC5B,AAAC,KAAa,IAAI,GACnB,EAAE;QAEV;QACA;IACF,GAAG,EAAE;IACL,qBACE,8OAAC;QAAI,WAAU;;0BAEb,8OAAC;gBAAI,WAAU;0BACb,cAAA,8OAAC;oBAAI,WAAU;;sCACb,8OAAC;4BAAG,WAAU;sCAA8C;;;;;;sCAG5D,8OAAC;4BAAE,WAAU;sCAAqC;;;;;;;;;;;;;;;;;0BAMtD,8OAAC;gBAAI,WAAU;0BACb,cAAA,8OAAC,mIAAA,CAAA,UAAa;oBACZ,kBAAkB;oBAClB,cAAc;oBACd,oBAAoB;;;;;;;;;;;0BAIxB,8OAAC;gBAAQ,WAAU;gBAAuB,IAAG;0BAC3C,cAAA,8OAAC;oBAAI,WAAU;8BACb,cAAA,8OAAC,kIAAA,CAAA,UAAY;wBACX,YAAY;wBACZ,kBAAkB;wBAClB,cAAc;wBACd,YAAY;;;;;;;;;;;;;;;;0BAKlB,8OAAC,qIAAA,CAAA,UAAe;;;;;;;;;;;AAGtB","debugId":null}}]
}